# -*- coding: utf-8 -*-
"""Math7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1D9Xn33ztUF8JLVUza80d4LrbjvZh-4Zm
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import scipy.linalg
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

# %matplotlib inline

"""1. Решите линейную систему:"""

A = np.array ([[1,2,3],[4,0,6],[7,8,9]])
B = np.array([12,2,1])
np.linalg.solve(A,B)

"""2. Найдите псевдорешение:\
x + 2y – z = 1\
3x – 4y = 7\
8x – 5y + 2z = 12\
2x – 5z = 7\
11x +4y – 7z = 15
"""

A = np.array ([[1,2,-1],[3,-4,0],[8,-5,2],[2,0,-5],[11,4,-7]])
B = np.array([1,7,12,7,15])
np.linalg.lstsq(A,B)

"""3. Сколько решений имеет линейная система:"""

A = np.array ([[1,2,3],[4,5,6],[7,8,9]])
B = np.array([[12,2,1]])
C = np.concatenate((A,B.T),axis=1)
print(C)

np.linalg.matrix_rank(A,0.0001),np.linalg.matrix_rank(C,0.0001)

"""Система не имеет решений"""

A = np.array ([[1,2,3],[4,5,6],[7,8,9]])
B = np.array([[12,15,18]])
C = np.concatenate((A,B.T),axis=1)
print(C)

np.linalg.matrix_rank(A,0.0001),np.linalg.matrix_rank(C,0.0001)

A = np.array ([[1,2,3],[4,5,6],[7,8,9]])
B = np.array([12,15,18])
np.linalg.lstsq(A,B)

"""4. Вычислите LU-разложение матрицы:"""

A = np.array ([ [1,2,3], [2,16,21], [4,28,73] ])

P, L, U = scipy.linalg.lu(A)

print(P)
print(L)
print(U)

print(np.dot(P,A) - np.dot(L,U))

A = np.array ([ [1,2,3], [2,16,21], [4,28,73] ])
B = np.array([[5,3,8]])
C = np.concatenate((A,B.T),axis=1)
print(C)

np.linalg.matrix_rank(A,0.0001),np.linalg.matrix_rank(C,0.0001)

A = np.array ([ [1,2,3], [2,16,21], [4,28,73] ])
B = np.array([5,3,8])

np.linalg.solve(A,B)

"""5. Найдите нормальное псевдорешение недоопределенной системы:\
x + 2y – z = 1\
8x – 5y + 2z = 12\
Для этого определите функцию Q(x,y,z), равную норме решения, и найдите ее минимум.
"""

def Q(x,y,z):
  return(x**2 + y**2 +z**2)

u = np.linspace(-5,5,100)
x,y = np.meshgrid(u,u)
z = x + 2*y -1
fig = plt.figure()
ax = Axes3D(fig)
ax.plot_surface(x, y, Q(x,x*10-14,x*21 - 29),rstride=1, cstride=1)
plt.grid(True)
plt.show

A = np.array ([ [1,2,-1], [8,-5,2] ])
B = np.array([1,12])

np.linalg.lstsq(A,B)

"""6. Найдите одно из псевдорешений вырожденной системы:
Попробуйте также отыскать и нормальное псевдорешение
"""

A = np.array ([ [1,2,3], [4,5,6], [7,8,9] ])
B = np.array([2,5,11])

Q,R = np.linalg.qr(A)

print(A)
print(Q)
print(R)

print(np.dot(Q,R))
print(np.dot(np.transpose(Q),Q))

R1=R[:2,:2]
R1

B1=np.dot(np.transpose(Q),B)[:2]
B1

X1 = np.linalg.solve(R1,B1)
X1

X = np.append(X1,0)
print(X)
np.linalg.norm(X)